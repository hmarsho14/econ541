distinct(entrance_years) # the year each household enters the panel
View(data_all_3)
View(entrance_years)
entrance_years <- data.frame(idmen = data_all_3$idmen, entrance_year = data_all_3$entrance_year) %>% distinct() # the year each household enters the panel
View(entrance_years)
exit_years <- data.frame(idmen = data_all_3$idmen, exit_year = data_all_3$exit_year) %>% distinct() # the year each household exits the panel
hist(data_all_3$time_spent, main = "Distribution of Time Spent in Panel", xlab = "Time Spent (in years)") # displays required distribution with a histogram
hist(data_all_3$time_spent, main = "Distribution of Time Spent in Panel", xlab = "Time Spent (in years)") # displays required distribution with a histogram
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year) %>% mutate(sameyear = (data_all_3$datent == data_all_3$year.x))
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear = (data_all_3$datent == data_all_3$year.x))
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear = case_when(data_all_3$datent == data_all_3$year.x ~ "TRUE",
data_all_3$datent != data_all_3$year.x ~ "FALSE"))
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear = case_when(data_all_3$datent == data_all_3$year.x ~ 1,
data_all_3$datent != data_all_3$year.x ~ 0))
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear = mean(age))
View(data_all_3)
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear = case_when(data_all_3$datent == data_all_3$year.x ~ 1,
data_all_3$datent != data_all_3$year.x ~ 0))
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear = (data_all_3$datent == data_all_3$year.x))
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear = (data_all_3$datent == data_all_3$year.x)*1)
View(data_all_3)
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear = (datent == year.x)*1)
View(data_all_3)
head(data_all_3$sameyear, 10)
movedin_same_year <- data_all_3$sameyear
movedin_same_year <- data.frame(sameyear = data_all_3$sameyear)
View(movedin_same_year)
num_ind_sameyear <- count(data_all_3$movedin_same_year)
num_ind_sameyear <- sum(data_all_3$movedin_same_year)
movedin_same_year <- data.frame(sameyear = data_all_3$sameyear)
View(movedin_same_year)
num_ind_sameyear <- sum(movedin_same_year$sameyear)
num_ind_sameyear <- count(movedin_same_year$sameyear)
movedin_same_year <- data.frame(idind = data_all_3$idind, sameyear = data_all_3$sameyear) # returns 1 if household moved into its current dwelling at the year of survey. 0 if not.
View(movedin_same_year)
movedin_same_year <- data.frame(idmen = data_all_3$idmen, idind = data_all_3$idind, sameyear = data_all_3$sameyear) # returns 1 if household moved into its current dwelling at the year of survey. 0 if not.
head(movedin_same_year, 10)
movedin_same_year <- data.frame(idmen = data_all_3$idmen, idind = data_all_3$idind, year = year.x, sameyear = data_all_3$sameyear) # returns 1 if household moved into its current dwelling at the year of survey. 0 if not.
movedin_same_year <- data.frame(idmen = data_all_3$idmen, idind = data_all_3$idind, year = data_all_3$year.x, sameyear = data_all_3$sameyear) # returns 1 if household moved into its current dwelling at the year of survey. 0 if not.
head(movedin_same_year, 10) # first 10 rows of result
num_ind_sameyear <- count(movedin_same_year$sameyear)
num_ind_sameyear <- sum(movedin_same_year$sameyear)
ggplot(aes(x = year.x, y = sameyear))
movedin_same_year <- movedin_same_year %>% dplyr::group_by(year.x) %>% mutate(num_ind_sameyear = sum(sameyear))
movedin_same_year <- movedin_same_year %>% dplyr::group_by(year) %>% mutate(num_ind_sameyear = sum(sameyear))
movedin_same_year %>% ggplot(aes(x = year.x, y = num_ind_sameyear)) + labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year")
movedin_same_year %>% ggplot(aes(x = year, y = num_ind_sameyear)) + geom_line() + labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year")
View(movedin_same_year)
movedin_same_year <- movedin_same_year %>% dplyr::group_by(year) %>% summarise(num_ind_sameyear = n())
View(movedin_same_year)
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear = (datent == year.x)*1)
movedin_same_year <- data.frame(idmen = data_all_3$idmen, idind = data_all_3$idind, year = data_all_3$year.x, sameyear = data_all_3$sameyear) # returns 1 if household moved into its current dwelling at the year of survey. 0 if not.
head(movedin_same_year, 10)
num_ind_movedin_same_year <- movedin_same_year %>% dplyr::group_by(year) %>% summarise(num_ind_sameyear = n())
num_ind_movedin_same_year %>% ggplot(aes(x = year, y = num_ind_sameyear)) + geom_line() + labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year")
num_ind_movedin_same_year %>% ggplot(aes(x = year, y = num_ind_sameyear)) + geom_point() + labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year")
View(data_all_3)
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(case_when(year.x <= 2014 ~ sameyear2 = (myear == year.x)*1, year.x > 2014 ~ sameyear2 = move - 1)
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(case_when(year.x <= 2014 ~ sameyear2 = (myear == year.x)*1, year.x > 2014 ~ sameyear2 = move - 1)
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(case_when(year.x <= 2014 ~ sameyear2 = (myear == year.x)*1, year.x > 2014 ~ sameyear2 = (move - 1))
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2 = case_when(year.x <= 2014) ~ (myear == year.x)*1,
year.x > 2014 ~ (move - 1))
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2 = case_when(year.x <= 2014) ~ (myear == year.x)*1,
year.x > 2014 ~ (move - 1)
TRUE ~ 0)
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2 = case_when(year.x <= 2014) ~ (myear == year.x)*1,
year.x > 2014 ~ (move - 1),
TRUE ~ 0)
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>%
if (year.x <= 2014) {
mutate(sameyear2 = (myear == year.x)*1)
} else {
mutate(sameyear2 = move - 1)
}
View(data_all_3)
if (data_all_3$year.x <= 2014) {
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2 = (myear == year.x)*1)
} else {
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2 = move - 1)
}
if (data_all_3$year.x == 2014) {
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2 = (myear == year.x)*1)
}
if (data_all_3$year.x <= 2014) {
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2 = meow)
}
if (data_all_3$year.x <= 2014) {
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2 = "meow")
}
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2_indicator = case_when(year.x <= 2014 ~ "use myear",
year.x > 2014 ~ "use move"))
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2_indicator = case_when(year.x <= 2014 ~ "use myear",
year.x > 2014 ~ "use move"))
if (data_all_3$sameyear2_indicator == "use myear") {
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2 = (myear == year.x)*1)
} else {
data_all_3 <- data_all_3 %>% dplyr::group_by(idmen, year.x) %>% mutate(sameyear2 = move - 1)
}
View(data_all_3)
movedin_same_year2 <- data.frame(idmen = data_all_3$idmen, idind = data_all_3$idind, year = data_all_3$year.x, sameyear2 = data_all_3$sameyear2) # returns 1 if household moved into its current dwelling at the year of survey. 0 if not.
head(movedin_same_year2, 10) # first 10 rows of result
num_ind_movedin_same_year2 <- movedin_same_year2 %>% dplyr::group_by(year) %>% summarise(num_ind_sameyear2 = n())
num_ind_movedin_same_year2 %>% ggplot(aes(x = year, y = num_ind_sameyear2)) + geom_point() + labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot
num_ind_movedin_same_year2 %>% ggplot(aes(x = year, y = num_ind_sameyear2)) + geom_point() + labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot
num_ind_movedin_same_year %>% ggplot(aes(x = year, y = num_ind_sameyear)) + geom_point() + labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot
num_ind_movedin_same_year %>% ggplot(aes(x = year, y = num_ind_sameyear)) + geom_point() + labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot
View(num_ind_movedin_same_year2)
View(num_ind_movedin_same_year)
combined_plot <- ggplot() +
# plot from 3b
geom_point(data = num_ind_movedin_same_year, aes(x = year, y = num_ind_sameyear)) +
# plot from 3c
geom_point(data = num_ind_movedin_same_year2, aes(x = year, y = num_ind_sameyear2, colour = red)) +
labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot. only see one set of points since the points are equal between the two plots.
# e) F
View(combined_plot)
movedin_same_year_combined <- data.frame(movedin_same_year, movedin_same_year2)
ggplot(movedin_same_year_combined, aes(x = year)) +
# plot from 3b with big points in black
geom_point(data = num_ind_movedin_same_year, aes(y = num_ind_sameyear, colour = "black", size = 4.5)) +
# plot from 3c with small points in red
geom_point(data = num_ind_movedin_same_year2, aes(y = num_ind_sameyear2, colour = "red", size = 4)) +
labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot.
movedin_same_year_combined <- data.frame(movedin_same_year, movedin_same_year2)
ggplot(movedin_same_year_combined, aes(x = year)) +
# plot from 3b with big points in red
geom_point(data = num_ind_movedin_same_year, aes(y = num_ind_sameyear, size = 4.5)) +
# plot from 3c with small points in blue
geom_point(data = num_ind_movedin_same_year2, aes(y = num_ind_sameyear2, size = 4)) +
labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot.
movedin_same_year_combined <- data.frame(movedin_same_year, movedin_same_year2)
ggplot(movedin_same_year_combined, aes(x = year)) +
# plot from 3b with big points in red
geom_point(data = num_ind_movedin_same_year, aes(y = num_ind_sameyear, colour = "red", size = 4.5)) +
# plot from 3c with small points in blue
geom_point(data = num_ind_movedin_same_year2, aes(y = num_ind_sameyear2, colour = "blue", size = 4)) +
labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot.
movedin_same_year_combined <- data.frame(movedin_same_year, movedin_same_year2)
ggplot(movedin_same_year_combined, aes(x = year)) +
# plot from 3b with big points in blue
geom_point(data = num_ind_movedin_same_year, aes(y = num_ind_sameyear, colour = "blue", size = 4.5)) +
# plot from 3c with small points in red
geom_point(data = num_ind_movedin_same_year2, aes(y = num_ind_sameyear2, colour = "red", size = 4)) +
labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot.
movedin_same_year_combined <- data.frame(movedin_same_year, movedin_same_year2)
ggplot(movedin_same_year_combined, aes(x = year)) +
# plot from 3b with big points in blue
geom_point(data = num_ind_movedin_same_year, aes(y = num_ind_sameyear, colour = "red", size = 4.5)) +
# plot from 3c with small points in red
geom_point(data = num_ind_movedin_same_year2, aes(y = num_ind_sameyear2, colour = "purple", size = 4)) +
labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot.
ggplot(movedin_same_year_combined, aes(x = year)) +
# plot from 3b with big points in blue
geom_point(data = num_ind_movedin_same_year, aes(y = num_ind_sameyear, colour = "red", size = 4.5)) +
# plot from 3c with small points in red
geom_point(data = num_ind_movedin_same_year2, aes(y = num_ind_sameyear2, colour = "black", size = 4)) +
labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot.
movedin_same_year_combined <- data.frame(movedin_same_year, movedin_same_year2)
ggplot(movedin_same_year_combined, aes(x = year)) +
# plot from 3b with big points in blue
geom_point(data = num_ind_movedin_same_year, aes(y = num_ind_sameyear, colour = "blue", size = 4.5)) +
# plot from 3c with small points in red
geom_point(data = num_ind_movedin_same_year2, aes(y = num_ind_sameyear2, colour = "red", size = 4)) +
labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot.
ggplot(movedin_same_year_combined, aes(x = year)) +
# plot from 3b with big points in blue
geom_point(data = num_ind_movedin_same_year, aes(y = num_ind_sameyear, colour = "blue", size = 4.5)) +
# plot from 3c with small points in red
geom_point(data = num_ind_movedin_same_year2, aes(y = num_ind_sameyear2, size = 4)) +
labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot.
movedin_same_year_combined <- data.frame(movedin_same_year, movedin_same_year2)
ggplot(movedin_same_year_combined, aes(x = year)) +
# plot from 3b with big points in red
geom_point(data = num_ind_movedin_same_year, aes(y = num_ind_sameyear, colour = "red", size = 4.5)) +
# plot from 3c with small points in black
geom_point(data = num_ind_movedin_same_year2, aes(y = num_ind_sameyear2, size = 4)) +
labs(x = "Year", y = "Number of Individuals Who Moved in That Survey Year") #displays required plot.
View(movedin_same_year)
View(data_all_3)
migrating_change_prof_empstat <- movedin_same_year <- data.frame(idmen = data_all_3$idmen, idind = data_all_3$idind, year = data_all_3$year.x, sameyear = data_all_3$sameyear, profession = data_all_3$profession, empstat = data_all_3$empstat)
View(migrating_change_prof_empstat)
library(Hmisc)
x1 = cut2(runif(100,0,1),g=10)
levels(x1)=paste("q",1:10,sep="")
#4) Test whether or not x1 is a factor
is.factor(x1)
#5) Verify that "q1" has 10 occurences
table(x1=="q1")[[2]] == 10
#6) Convert x1 into a numeric variable. What happens to the levels
as.numeric(x1) # levels are integers now
#7) Run the following
rand = rnorm(1000)
y1 = NULL; for (i in 1:100) {y1[i]=exp(i)}
y2 = exp(1:100)
y3 = sapply(1:100,exp)
y1=NULL; system.time(for (i in 1:100) {y1[i]=exp(i)})
system.time(exp(1:100))
system.time(sapply(1:100,exp))
ni = 1000
nvar = 10
X = matrix(,nrow=1000,ncol=10)
X = matrix(,nrow=1000,ncol=10)
dat = rbeta(1000*10, 2, 1)
X[1:1000,1:10] = dat
length(X[X<0]) == 0
X = matrix(NULL, nrow = 1000, ncol = 10)
dat = rbeta(1000*10, 2, 1)
X[1:1000, 1:10] = dat
length(X[X<0]) == 0
X = matrix(NULL, nrow = 1000, ncol = 10)
dat = rbeta(1000*10, 2, 1)
X[1:1000, 1:10] = dat
length(X[X<0]) == 0
#2) Create a scalar denoted by sigma^2 and set it to 0.5. Generate a vector beta of size 10. Fill it with draws from a Gamma distribution with parameters 2 and 1
sigmasq = 0.5
beta = rgamma(10, 2, 1)
#3) Create a vector epsilon of 1000 draws from a normal distribution
eps = rnorm(1000)
#4) Create Y = X*Beta + sqrt(sigma^2)*epsilon
Y = X%*%beta + sqrt(sigmasq)*eps
#5) Recover Beta hat
solve(t(X)%*%X)%*%t(X)%*%Y
#6) Evaluate epsilon hat = y hat - y. Plot the histogram (filled in gray) and the kernel density of the distribution of the error term
Yhat = X %*% beta
epsHat = Yhat - Y
hist(epsHat, col="gray")
plot(density(epsHat))
#7) Estimate the following
s = t(epsHat) %*% epsHat / (1000-10-1)
v = s[1,1] * solve(t(X)%*%X)
#8) Create param that binds (beta, sqrt(V(beta hat))). Using the command lm, check these estimates
param = cbind(beta, sqrt(v))
fit0 = lm(Y ~ 0+X)
summary(fit0)
#9) Construct a confidence interval for beta
confint(fit0)
confint(fit0)
sigmasq = 0.01
Y = X %*% beta + sqrt(sigmasq)*eps
fit1 = lm(Y~0+X)
confint(fit1)
library(tidyverse)
library(readr)
setwd("/Users/hannahmarsho/Desktop/econ613_wd/Data")
datstu <- read.csv('datstu_v2.csv')
datjss <- read.csv('datjss.csv')
datsss <- read.csv('datsss.csv')
#=========================================================================
# Exercise 1: Basic Statistics
datstu <- read.csv('datstu_v2.csv')
getwd
getwd(())
getwd()
setwd("/Users/hannahmarsho/Desktop/econ613_wd/Data")
getwd()
setwd()
setwd("/Users/hannahmarsho/Desktop/econ613_wd/Data")
getwd()
getwd()
setwd("~/Documents/GitHub/613/Data")
library(haven)
library(dplyr)
data_2016 <- read_dta("cfps2016adult_201906.dta")
data_2018 <- read_dta("cfps2018person_202012.dta")
data_2020 <- read_dta("cfps2020person_202112.dta")
#Cleaning 2016 data
data_2016_subset <- select(data_2016,pid,qgb1,employ,subpopulation,cfps_age,cfps_gender,kw1,qea0,cfps_childn,pa301,qz207)
#Create Variable "Policy"
data_2016_subset$policy <- 0
#Rename Variables
data_2016_subset <- data_2016_subset %>% rename(id = pid)
data_2016_subset <- data_2016_subset %>% rename(employ1 = qgb1)
data_2016_subset <- data_2016_subset %>% rename(region = subpopulation)
data_2016_subset <- data_2016_subset %>% rename(gender = cfps_gender)
data_2016_subset <- data_2016_subset %>% rename(age = cfps_age)
data_2016_subset <- data_2016_subset %>% rename(nchild = cfps_childn)
data_2016_subset <- data_2016_subset %>% rename(education = kw1)
data_2016_subset <- data_2016_subset %>% rename(hukou = pa301)
data_2016_subset <- data_2016_subset %>% rename(mstatus = qea0)
data_2016_subset <- data_2016_subset %>% rename(IQ = qz207)
#Recategorize
data_2016_subset$gender[data_2016_subset$gender == 5] = 0
data_2016_subset <- subset(data_2016_subset,education != -8)
data_2016_subset$education[data_2016_subset$education < 7] = 0
data_2016_subset$education[data_2016_subset$education == 10] = 0
data_2016_subset$education[data_2016_subset$education == 7] = 1
data_2016_subset$education[data_2016_subset$education == 8] = 2
data_2016_subset$education[data_2016_subset$education == 9] = 3
data_2016_subset <- subset(data_2016_subset, hukou == 1 | hukou == 3)
data_2016_subset$hukou[data_2016_subset$hukou == 1] = 0
data_2016_subset$hukou[data_2016_subset$hukou == 1] = 1
data_2016_subset$mstatus[data_2016_subset$mstatus == 1] = 0
data_2016_subset$mstatus[data_2016_subset$mstatus == 4] = 0
data_2016_subset$mstatus[data_2016_subset$mstatus == 5] = 0
data_2016_subset$mstatus[data_2016_subset$mstatus == 2] = 1
data_2016_subset$mstatus[data_2016_subset$mstatus == 3] = 1
#Cleaning 2018 data
data_2018_subset <- select(data_2018,pid,qgb1,employ,subpopulation,age,qa002,w01,qa301,qea0,kz207,xchildpid_a_1,xchildpid_a_2,xchildpid_a_3, xchildpid_a_4, xchildpid_a_5, xchildpid_a_6, xchildpid_a_7, xchildpid_a_8, xchildpid_a_9, xchildpid_a_10)
data_2018_children <- data_2018_subset[,c(1,11:20)]
data_2018_children[is.na(data_2018_children)] = -1*8
data_2018_children$nchild <- 0
for (i in 1:37354) {
data_2018_children$nchild[i]<-length(which(data_2018_children[i,]!=-8))-2
}
a<-data_2018_children$nchild
data_2018_subset$nchild <- data_2018_children$nchild
data_2018_subset <- data_2018_subset[,-c(11:20)]
#Create Variable "Policy"
data_2018_subset$policy <- 0
#Rename Variables
data_2018_subset <- data_2018_subset %>% rename(id = pid)
data_2018_subset <- data_2018_subset %>% rename(employ1 = qgb1)
data_2018_subset <- data_2018_subset %>% rename(region = subpopulation)
data_2018_subset <- data_2018_subset %>% rename(gender = qa002)
data_2018_subset <- data_2018_subset %>% rename(education = w01)
data_2018_subset <- data_2018_subset %>% rename(hukou = qa301)
data_2018_subset <- data_2018_subset %>% rename(mstatus = qea0)
data_2018_subset <- data_2018_subset %>% rename(IQ = kz207)
#Recategorize
data_2018_subset$gender[data_2018_subset$gender==5]=0
data_2018_subset <- subset(data_2018_subset,education!=-8)
data_2018_subset$education[data_2018_subset$education<7]=0
data_2018_subset$education[data_2018_subset$education==10]=0
data_2018_subset$education[data_2018_subset$education==7]=1
data_2018_subset$education[data_2018_subset$education==8]=2
data_2018_subset$education[data_2018_subset$education==9]=3
data_2018_subset <- subset(data_2018_subset,hukou==1 | hukou==3)
data_2018_subset$hukou[data_2018_subset$hukou==1] = 0
data_2018_subset$hukou[data_2018_subset$hukou==1] = 1
data_2018_subset$mstatus[data_2018_subset$mstatus==1] = 0
data_2018_subset$mstatus[data_2018_subset$mstatus==4] = 0
data_2018_subset$mstatus[data_2018_subset$mstatus==5] = 0
data_2018_subset$mstatus[data_2018_subset$mstatus==2] = 1
data_2018_subset$mstatus[data_2018_subset$mstatus==3] = 1
#Cleaning 2020 data
data_2020_subset <- select(data_2020,pid,qgb1,employ,subpopulation,age,qa002,w01,qa301,qea0,child16n,qz207)
#Rename Variables
data_2020_subset <- data_2020_subset %>%
rename(id = pid,
employ1 = qgb1,
employ = employ,
region = subpopulation,
age = age,
gender = qa002,
education = w01,
hukou = qa301,
mstatus = qea0,
nchild = child16n,
IQ     =qz207)
#Create Variable "Policy"
data_2020_subset$policy <- 1
#Re-categorize
data_2020_subset$gender[data_2020_subset$gender == 5] = 0
data_2020_subset <- subset(data_2020_subset,education != -8)
data_2020_subset$education[data_2020_subset$education < 7] = 0
data_2020_subset$education[data_2020_subset$education == 10] = 0
data_2020_subset$education[data_2020_subset$education == 7] = 1
data_2020_subset$education[data_2020_subset$education == 8] = 2
data_2020_subset$education[data_2020_subset$education == 9] = 3
data_2020_subset <- subset(data_2020_subset,hukou == 1 | hukou == 3)
data_2020_subset$hukou[data_2020_subset$hukou==1] = 0
data_2020_subset$hukou[data_2020_subset$hukou==1] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==1] = 0
data_2020_subset$mstatus[data_2020_subset$mstatus==2] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==3] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==4] = 0
data_2020_subset$mstatus[data_2020_subset$mstatus==5] = 0
#Keeping the same order
data_2016_subset <- select(data_2016_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2018_subset <- select(data_2018_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2020_subset <- select(data_2020_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2016_subset$year <- 2016
data_2018_subset$year <- 2018
data_2020_subset$year <- 2020
#Append
data_all <- bind_rows(data_2016_subset,data_2018_subset,data_2020_subset)
data_all$interaction <- data_all$gender * data_all$policy
data_all$agesq <- data_all$age^2
data_all <- subset(data_all,employ1==0|employ1==1)
data_all <- subset(data_all,employ==0|employ==1)
data_allrange <- subset(data_all,25<=age&age<=64)
data_young <- subset(data_all,16<=age&age<=25)
data_all$interaction <- data_all$gender * data_all$policy
employ_id <- data_all %>% group_by(id) %>% summarize(employ1=mean(employ1))
table(employ_id $ employ1 )
setwd("~/Documents/GitHub/613/Data")
setwd("~/Documents/GitHub/613/Data")
getwd()
setwd("~/Documents/GitHub/613/Data")
setwd("~/Documents/GitHub/613/Data")
library(haven)
library(dplyr)
data_2016 <- read_dta("cfps2016adult_201906.dta")
data_2018 <- read_dta("cfps2018person_202012.dta")
data_2020 <- read_dta("cfps2020person_202112.dta")
#Cleaning 2016 data
data_2016_subset <- select(data_2016,pid,qgb1,employ,subpopulation,cfps_age,cfps_gender,kw1,qea0,cfps_childn,pa301,qz207)
#Create Variable "Policy"
data_2016_subset$policy <- 0
data_2016_subset$policy <- 0
#Rename Variables
data_2016_subset <- data_2016_subset %>% rename(id = pid)
data_2016_subset <- data_2016_subset %>% rename(employ1 = qgb1)
data_2016_subset <- data_2016_subset %>% rename(region = subpopulation)
data_2016_subset <- data_2016_subset %>% rename(gender = cfps_gender)
data_2016_subset <- data_2016_subset %>% rename(age = cfps_age)
data_2016_subset <- data_2016_subset %>% rename(nchild = cfps_childn)
data_2016_subset <- data_2016_subset %>% rename(education = kw1)
data_2016_subset <- data_2016_subset %>% rename(hukou = pa301)
data_2016_subset <- data_2016_subset %>% rename(mstatus = qea0)
data_2016_subset <- data_2016_subset %>% rename(IQ = qz207)
#Recategorize
data_2016_subset$gender[data_2016_subset$gender == 5] = 0
data_2016_subset <- subset(data_2016_subset,education != -8)
data_2016_subset$education[data_2016_subset$education < 7] = 0
data_2016_subset$education[data_2016_subset$education == 10] = 0
data_2016_subset$education[data_2016_subset$education == 7] = 1
data_2016_subset$education[data_2016_subset$education == 8] = 2
data_2016_subset$education[data_2016_subset$education == 9] = 3
data_2016_subset <- subset(data_2016_subset, hukou == 1 | hukou == 3)
data_2016_subset$hukou[data_2016_subset$hukou == 1] = 0
data_2016_subset$hukou[data_2016_subset$hukou == 1] = 1
data_2016_subset$mstatus[data_2016_subset$mstatus == 1] = 0
data_2016_subset$mstatus[data_2016_subset$mstatus == 4] = 0
data_2016_subset$mstatus[data_2016_subset$mstatus == 5] = 0
data_2016_subset$mstatus[data_2016_subset$mstatus == 2] = 1
data_2016_subset$mstatus[data_2016_subset$mstatus == 3] = 1
#Cleaning 2018 data
data_2018_subset <- select(data_2018,pid,qgb1,employ,subpopulation,age,qa002,w01,qa301,qea0,kz207,xchildpid_a_1,xchildpid_a_2,xchildpid_a_3, xchildpid_a_4, xchildpid_a_5, xchildpid_a_6, xchildpid_a_7, xchildpid_a_8, xchildpid_a_9, xchildpid_a_10)
data_2018_children <- data_2018_subset[,c(1,11:20)]
data_2018_children[is.na(data_2018_children)] = -1*8
data_2018_children$nchild <- 0
for (i in 1:37354) {
data_2018_children$nchild[i]<-length(which(data_2018_children[i,]!=-8))-2
}
a<-data_2018_children$nchild
data_2018_subset$nchild <- data_2018_children$nchild
data_2018_subset <- data_2018_subset[,-c(11:20)]
#Create Variable "Policy"
data_2018_subset$policy <- 0
#Cleaning 2020 data
data_2020_subset <- select(data_2020,pid,qgb1,employ,subpopulation,age,qa002,w01,qa301,qea0,child16n,qz207)
#Rename Variables
data_2020_subset <- data_2020_subset %>%
rename(id = pid,
employ1 = qgb1,
employ = employ,
region = subpopulation,
age = age,
gender = qa002,
education = w01,
hukou = qa301,
mstatus = qea0,
nchild = child16n,
IQ     =qz207)
#Create Variable "Policy"
data_2020_subset$policy <- 1
#Re-categorize
data_2020_subset$gender[data_2020_subset$gender == 5] = 0
data_2020_subset <- subset(data_2020_subset,education != -8)
data_2020_subset$education[data_2020_subset$education < 7] = 0
data_2020_subset$education[data_2020_subset$education == 10] = 0
data_2020_subset$education[data_2020_subset$education == 7] = 1
data_2020_subset$education[data_2020_subset$education == 8] = 2
data_2020_subset$education[data_2020_subset$education == 9] = 3
data_2020_subset <- subset(data_2020_subset,hukou == 1 | hukou == 3)
data_2020_subset$hukou[data_2020_subset$hukou==1] = 0
data_2020_subset$hukou[data_2020_subset$hukou==1] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==1] = 0
data_2020_subset$mstatus[data_2020_subset$mstatus==2] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==3] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==4] = 0
data_2020_subset$mstatus[data_2020_subset$mstatus==5] = 0
#Keeping the same order
data_2016_subset <- select(data_2016_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2018_subset <- select(data_2018_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2020_subset <- select(data_2020_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2016_subset$year <- 2016
data_2018_subset$year <- 2018
data_2020_subset$year <- 2020
#Append
data_all <- bind_rows(data_2016_subset,data_2018_subset,data_2020_subset)
data_all$interaction <- data_all$gender * data_all$policy
data_all$agesq <- data_all$age^2
data_all <- subset(data_all,employ1==0|employ1==1)
data_all <- subset(data_all,employ==0|employ==1)
data_allrange <- subset(data_all,25<=age&age<=64)
data_young <- subset(data_all,16<=age&age<=25)
data_all$interaction <- data_all$gender * data_all$policy
employ_id <- data_all %>% group_by(id) %>% summarize(employ1=mean(employ1))
table(employ_id $ employ1 )
reg_basic <- lm(employ1 ~ gender + policy + interaction + age + region + education + mstatus + nchild + year, data = data_young )
summary(reg_basic)
library(lmtest)
library(sandwich)
library("lmtest")
library("sandwich")
install.packages(lmtest)
install.packages("lmtest")
install.packages("sandwich")
library("lmtest")
library("sandwich")
ct.reg_basic <- coeftest(reg_basic, vcov. = vcovHC)
summary(ct.reg_basic)
ct.reg_basic
View(data_2018_subset)
setwd("~/Documents/GitHub/econ541")
read.csv("final_lycoming_data.tsv", sep = "\t")
setwd("~/Documents/GitHub/econ541")
read.csv("final_lycoming_data.tsv", sep = "\t")
parcel_data <- read.csv("final_lycoming_data.tsv", sep = "\t")
View(parcel_data)
